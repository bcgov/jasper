# This Dockerfile is used by the publish-web CI/CD Pipeline
ARG NODE_VERSION=10
ARG WEB_BASE_HREF=/

###################################################################################
# 1. Build web-runtime
###################################################################################
# Use the offical nginx (based on debian)
FROM nginx:stable as runtime

ENV STI_SCRIPTS_PATH=/usr/libexec/s2i

# Required for HTTP Basic feature
RUN apt-get update -y && \
    apt-get install -y openssl ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy our OpenShift s2i scripts over to default location
COPY ../../docker/vue-on-nginx/s2i/bin/ /usr/libexec/s2i/

# Expose this variable to OpenShift
LABEL io.openshift.s2i.scripts-url=image:///usr/libexec/s2i

# Copy config from source to container
COPY ../../docker/nginx-runtime/nginx.conf.template /tmp/

# =================================================================================
# Fix up permissions
# ref: https://torstenwalter.de/openshift/nginx/2017/08/04/nginx-on-openshift.html
# - S2I scripts must be executable
# - Make sure nginx can read and write it's working directories.
# - The container dynamically configures nginx on startup
# - The application artifacts live in /tmp
# ---------------------------------------------------------------------------------
RUN chmod -R g+rwx $STI_SCRIPTS_PATH
RUN chmod g+rw /var/cache/nginx \ 
    /var/run \
    /var/log/nginx \
    /etc/nginx/nginx.conf \
    /tmp

# =================================================================================

# Work-around for issues with S2I builds on Windows
WORKDIR /tmp

# Nginx runs on port 8080 by default
EXPOSE 8080

# Switch to usermode
USER 104

###################################################################################
# 2. Build web-artifacts
###################################################################################
ARG node_version=10
FROM quay.io/centos7/nodejs-${NODE_VERSION}-centos7:${NODE_VERSION} as artifacts

USER root
WORKDIR /opt/app-root/src

COPY ./web .

RUN npm install
RUN npm run build 

#######
# 3. Build web
FROM runtime

# Copy the build artifacts from the 'builder' image
# to the distribution folder on the runtime image.
COPY --from=artifacts /opt/app-root/src/dist/. /tmp/app/dist/

# # Ensure S2I script copied over is runnable.
COPY ../../docker/vue-on-nginx/s2i/bin/fix-base-url /usr/libexec/s2i/fix-base-url

# Fix permissions.
USER root
RUN chmod 674 /usr/libexec/s2i/fix-base-url
RUN chmod -R 674 /tmp/app/dist/

# From nginx-runtime.
USER 104

# Since the runtime image is itself an s2i image we need to
# short circuit the s2i lifecycle.
# The runtime image "loses" its s2i runtime voodoo when it 
# is used in a dockerSrategy, which is why the explicit `CMD` is necessary
CMD  /usr/libexec/s2i/fix-base-url